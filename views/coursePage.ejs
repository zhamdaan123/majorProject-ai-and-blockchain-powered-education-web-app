<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Course Dashboard</title>
  <style>
    /* Existing styles... */
    :root {
      --primary-color: #771965;
      --secondary-color: #c13399;
      --accent-color: #f292c2;
      --highlight-color: #f57ca9;
      --background-color: #f9f1f6;
      --text-color: #2c2c2c;
      --font-base: 16px;
      --font-large: 24px;
      --font-small: 14px;
      --spacing-small: 8px;
      --spacing-medium: 16px;
      --spacing-large: 24px;
    }

    body {
      margin: 0;
      font-family: Arial, sans-serif;
      background-color: var(--background-color);
      color: var(--text-color);
      display: flex;
      height: 100vh;
      overflow: hidden;
    }

    .sidebar {
      width: 20%;
      background-color: var(--primary-color);
      display: flex;
      flex-direction: column;
      padding: var(--spacing-medium);
      color: white;
    }

    .sidebar h2 {
      font-size: var(--font-large);
      margin-bottom: var(--spacing-medium);
    }

    .sidebar ul {
      list-style: none;
      padding: 0;
    }

    .sidebar ul li {
      margin-bottom: var(--spacing-small);
      cursor: pointer;
      padding: var(--spacing-small);
      background-color: var(--secondary-color);
      border-radius: 8px;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .sidebar ul li:hover {
      background-color: var(--highlight-color);
    }

    .status-icon {
      margin-left: 10px;
      font-size: 14px;
    }

    .main-content {
      flex: 1;
      padding: var(--spacing-large);
      overflow-y: auto;
      display: flex;
      gap: var(--spacing-large);
    }

    .tab-buttons {
      display: flex;
      flex-direction: column;
      gap: var(--spacing-small);
      margin-right: var(--spacing-medium);
    }

    .tab-buttons button {
      padding: var(--spacing-small);
      background-color: var(--accent-color);
      color: white;
      border: none;
      border-radius: 6px;
      cursor: pointer;
    }

    .tab-buttons button.active {
      background-color: var(--secondary-color);
    }

    .pane {
      flex: 1;
      background: white;
      border-radius: 12px;
      box-shadow: 0 4px 12px rgba(0,0,0,0.1);
      padding: var(--spacing-large);
      display: none;
      flex-direction: column;
    }

    .pane.active {
      display: flex;
    }

    .pane iframe {
      width: 100%;
      height: 500px;
      border: none;
      border-radius: 10px;
      box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);
    }

    .course-content h1 {
      color: var(--primary-color);
    }

    .complete-btn {
      margin-top: var(--spacing-medium);
      padding: var(--spacing-small) var(--spacing-medium);
      background-color: var(--highlight-color);
      border: none;
      border-radius: 8px;
      cursor: pointer;
      font-size: var(--font-small);
    }
  </style>
</head>
<body>
  <div class="sidebar">
    <h2>Course Modules</h2>
    <ul id="module-list">
      <!-- Populated by JS -->
    </ul>
  </div>

  <div class="main-content">
    <div class="tab-buttons">
      <button onclick="switchTab('course')" id="btn-course" class="active">üìò Course</button>
      <button onclick="switchTab('chat')" id="btn-chat">ü§ñ AI Assistant</button>
    </div>

    <div id="course" class="pane active">
      <div class="course-content">
        <h1 id="course-title">Welcome to Introduction to AI</h1>
        <p>This course provides a comprehensive introduction to artificial intelligence...</p>
        <h3>Topics Covered:</h3>
        <ul>
          <li>History and Evolution of AI</li>
          <li>Key Domains of AI</li>
          <li>Basic Machine Learning Concepts</li>
          <li>Hands-on Projects and Case Studies</li>
        </ul>
        <button class="complete-btn" onclick="toggleCompletion()">‚úîÔ∏è Mark as Completed</button>
      </div>
    </div>

    <div id="chat" class="pane">
      <iframe 
        src="https://app.vectorshift.ai/chatbots/embedded/67c2f3788d70f590126eac7f?openChatbot=true"
        allow="clipboard-read; clipboard-write; microphone">
      </iframe>
    </div>
  </div>

  <script>
    const modules = [
      "Introduction to AI",
      "Machine Learning Basics",
      "Deep Learning Fundamentals",
      "Natural Language Processing",
      "AI in Education",
      "Ethics in AI"
    ];

    const currentModule = modules[0]; // default displayed module
    const storageKey = "completedModules";

    function loadModules() {
      const completed = JSON.parse(localStorage.getItem(storageKey) || "{}");
      const ul = document.getElementById("module-list");
      ul.innerHTML = "";

      modules.forEach(mod => {
        const li = document.createElement("li");
        li.textContent = mod;
        li.onclick = () => selectModule(mod);
        const status = document.createElement("span");
        status.className = "status-icon";
        status.textContent = completed[mod] ? "‚úîÔ∏è" : "‚ùå";
        li.appendChild(status);
        ul.appendChild(li);
      });
    }

    function selectModule(mod) {
      document.getElementById("course-title").textContent = "Welcome to " + mod;
      localStorage.setItem("lastViewedModule", mod);
      loadModules();
    }

    function toggleCompletion() {
      const mod = localStorage.getItem("lastViewedModule") || currentModule;
      const completed = JSON.parse(localStorage.getItem(storageKey) || "{}");
      completed[mod] = !completed[mod];
      localStorage.setItem(storageKey, JSON.stringify(completed));
      loadModules();
    }

    function switchTab(tabId) {
      const coursePane = document.getElementById('course');
      const chatPane = document.getElementById('chat');
      const btnCourse = document.getElementById('btn-course');
      const btnChat = document.getElementById('btn-chat');

      if (tabId === 'chat') {
        coursePane.classList.remove('active');
        chatPane.classList.add('active');
        btnCourse.classList.remove('active');
        btnChat.classList.add('active');
      } else {
        chatPane.classList.remove('active');
        coursePane.classList.add('active');
        btnChat.classList.remove('active');
        btnCourse.classList.add('active');
      }
    }

    // Init
    window.onload = () => {
      loadModules();
      const last = localStorage.getItem("lastViewedModule");
      if (last) {
        selectModule(last);
      }
    };
  </script>
</body>
</html>

